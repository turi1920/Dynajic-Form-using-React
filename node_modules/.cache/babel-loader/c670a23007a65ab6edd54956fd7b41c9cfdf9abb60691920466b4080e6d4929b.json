{"ast":null,"code":"const mockData = {\n  userInfo: {\n    fields: [{\n      name: 'firstName',\n      type: 'text',\n      label: 'First Name',\n      required: true\n    }, {\n      name: 'lastName',\n      type: 'text',\n      label: 'Last Name',\n      required: true\n    }, {\n      name: 'age',\n      type: 'number',\n      label: 'Age',\n      required: false\n    }]\n  },\n  address: {\n    fields: [{\n      name: 'street',\n      type: 'text',\n      label: 'Street',\n      required: true\n    }, {\n      name: 'city',\n      type: 'text',\n      label: 'City',\n      required: true\n    }, {\n      name: 'state',\n      type: 'dropdown',\n      label: 'State',\n      options: ['California', 'Texas', 'New York'],\n      required: true\n    }, {\n      name: 'zipCode',\n      type: 'text',\n      label: 'Zip Code',\n      required: false\n    }]\n  },\n  payment: {\n    fields: [{\n      name: 'cardNumber',\n      type: 'text',\n      label: 'Card Number',\n      required: true\n    }, {\n      name: 'expiryDate',\n      type: 'date',\n      label: 'Expiry Date',\n      required: true\n    }, {\n      name: 'cvv',\n      type: 'password',\n      label: 'CVV',\n      required: true\n    }, {\n      name: 'cardholderName',\n      type: 'text',\n      label: 'Cardholder Name',\n      required: true\n    }]\n  }\n};\nexport const mockApiResponse = formType => {\n  // Simulate API delay\n  return mockData[formType];\n};","map":{"version":3,"names":["mockData","userInfo","fields","name","type","label","required","address","options","payment","mockApiResponse","formType"],"sources":["c:/Users/turik/CascadeProjects/New folder/dynamic-form-app/src/api/mockApi.ts"],"sourcesContent":["import { FormType, ApiResponse } from '../types';\n\nconst mockData: Record<FormType, ApiResponse> = {\n  userInfo: {\n    fields: [\n      { name: 'firstName', type: 'text', label: 'First Name', required: true },\n      { name: 'lastName', type: 'text', label: 'Last Name', required: true },\n      { name: 'age', type: 'number', label: 'Age', required: false }\n    ]\n  },\n  address: {\n    fields: [\n      { name: 'street', type: 'text', label: 'Street', required: true },\n      { name: 'city', type: 'text', label: 'City', required: true },\n      { name: 'state', type: 'dropdown', label: 'State', options: ['California', 'Texas', 'New York'], required: true },\n      { name: 'zipCode', type: 'text', label: 'Zip Code', required: false }\n    ]\n  },\n  payment: {\n    fields: [\n      { name: 'cardNumber', type: 'text', label: 'Card Number', required: true },\n      { name: 'expiryDate', type: 'date', label: 'Expiry Date', required: true },\n      { name: 'cvv', type: 'password', label: 'CVV', required: true },\n      { name: 'cardholderName', type: 'text', label: 'Cardholder Name', required: true }\n    ]\n  }\n};\n\nexport const mockApiResponse = (formType: FormType): ApiResponse => {\n  // Simulate API delay\n  return mockData[formType];\n};\n"],"mappings":"AAEA,MAAMA,QAAuC,GAAG;EAC9CC,QAAQ,EAAE;IACRC,MAAM,EAAE,CACN;MAAEC,IAAI,EAAE,WAAW;MAAEC,IAAI,EAAE,MAAM;MAAEC,KAAK,EAAE,YAAY;MAAEC,QAAQ,EAAE;IAAK,CAAC,EACxE;MAAEH,IAAI,EAAE,UAAU;MAAEC,IAAI,EAAE,MAAM;MAAEC,KAAK,EAAE,WAAW;MAAEC,QAAQ,EAAE;IAAK,CAAC,EACtE;MAAEH,IAAI,EAAE,KAAK;MAAEC,IAAI,EAAE,QAAQ;MAAEC,KAAK,EAAE,KAAK;MAAEC,QAAQ,EAAE;IAAM,CAAC;EAElE,CAAC;EACDC,OAAO,EAAE;IACPL,MAAM,EAAE,CACN;MAAEC,IAAI,EAAE,QAAQ;MAAEC,IAAI,EAAE,MAAM;MAAEC,KAAK,EAAE,QAAQ;MAAEC,QAAQ,EAAE;IAAK,CAAC,EACjE;MAAEH,IAAI,EAAE,MAAM;MAAEC,IAAI,EAAE,MAAM;MAAEC,KAAK,EAAE,MAAM;MAAEC,QAAQ,EAAE;IAAK,CAAC,EAC7D;MAAEH,IAAI,EAAE,OAAO;MAAEC,IAAI,EAAE,UAAU;MAAEC,KAAK,EAAE,OAAO;MAAEG,OAAO,EAAE,CAAC,YAAY,EAAE,OAAO,EAAE,UAAU,CAAC;MAAEF,QAAQ,EAAE;IAAK,CAAC,EACjH;MAAEH,IAAI,EAAE,SAAS;MAAEC,IAAI,EAAE,MAAM;MAAEC,KAAK,EAAE,UAAU;MAAEC,QAAQ,EAAE;IAAM,CAAC;EAEzE,CAAC;EACDG,OAAO,EAAE;IACPP,MAAM,EAAE,CACN;MAAEC,IAAI,EAAE,YAAY;MAAEC,IAAI,EAAE,MAAM;MAAEC,KAAK,EAAE,aAAa;MAAEC,QAAQ,EAAE;IAAK,CAAC,EAC1E;MAAEH,IAAI,EAAE,YAAY;MAAEC,IAAI,EAAE,MAAM;MAAEC,KAAK,EAAE,aAAa;MAAEC,QAAQ,EAAE;IAAK,CAAC,EAC1E;MAAEH,IAAI,EAAE,KAAK;MAAEC,IAAI,EAAE,UAAU;MAAEC,KAAK,EAAE,KAAK;MAAEC,QAAQ,EAAE;IAAK,CAAC,EAC/D;MAAEH,IAAI,EAAE,gBAAgB;MAAEC,IAAI,EAAE,MAAM;MAAEC,KAAK,EAAE,iBAAiB;MAAEC,QAAQ,EAAE;IAAK,CAAC;EAEtF;AACF,CAAC;AAED,OAAO,MAAMI,eAAe,GAAIC,QAAkB,IAAkB;EAClE;EACA,OAAOX,QAAQ,CAACW,QAAQ,CAAC;AAC3B,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}