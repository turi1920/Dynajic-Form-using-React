{"ast":null,"code":"var _jsxFileName = \"c:\\\\Users\\\\turik\\\\CascadeProjects\\\\New folder\\\\dynamic-form-app\\\\src\\\\components\\\\DynamicForm.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Box, FormControl, InputLabel, MenuItem, Select, TextField, Button, Typography, LinearProgress, Alert, Paper, Grid } from '@mui/material';\nimport { mockApiResponse } from '../api/mockApi';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DynamicForm = () => {\n  _s();\n  const [formType, setFormType] = useState('userInfo');\n  const [fields, setFields] = useState([]);\n  const [formData, setFormData] = useState({});\n  const [errors, setErrors] = useState({});\n  const [progress, setProgress] = useState(0);\n  const [submitted, setSubmitted] = useState(false);\n  const [submittedData, setSubmittedData] = useState([]);\n  useEffect(() => {\n    // Simulate API call\n    const response = mockApiResponse(formType);\n    setFields(response.fields);\n    setFormData({});\n    setErrors({});\n    setProgress(0);\n    setSubmitted(false);\n  }, [formType]);\n  const handleInputChange = (name, value) => {\n    setFormData(prev => ({\n      ...prev,\n      [name]: value\n    }));\n    validateField(name, value);\n    updateProgress();\n  };\n  const validateField = (name, value) => {\n    const field = fields.find(f => f.name === name);\n    if (!field) return;\n    if (field.required && !value) {\n      setErrors(prev => ({\n        ...prev,\n        [name]: 'This field is required'\n      }));\n    } else {\n      setErrors(prev => {\n        const newErrors = {\n          ...prev\n        };\n        delete newErrors[name];\n        return newErrors;\n      });\n    }\n  };\n  const updateProgress = () => {\n    const totalRequired = fields.filter(field => field.required).length;\n    if (totalRequired === 0) {\n      setProgress(100);\n      return;\n    }\n    const filledRequired = fields.filter(field => field.required && formData[field.name]).length;\n    setProgress(filledRequired / totalRequired * 100);\n  };\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    // Validate all fields\n    const newErrors = {};\n    fields.forEach(field => {\n      if (field.required && !formData[field.name]) {\n        newErrors[field.name] = 'This field is required';\n      }\n    });\n    if (Object.keys(newErrors).length > 0) {\n      setErrors(newErrors);\n      return;\n    }\n    setSubmittedData(prev => [...prev, formData]);\n    setSubmitted(true);\n  };\n  const handleEdit = index => {\n    const dataToEdit = submittedData[index];\n    setFormData(dataToEdit);\n    setSubmittedData(prev => prev.filter((_, i) => i !== index));\n  };\n  const handleDelete = index => {\n    setSubmittedData(prev => prev.filter((_, i) => i !== index));\n  };\n  return /*#__PURE__*/_jsxDEV(Box, {\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h4\",\n      gutterBottom: true,\n      children: \"Dynamic Form Generator\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n      fullWidth: true,\n      sx: {\n        mb: 3\n      },\n      children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n        children: \"Form Type\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Select, {\n        value: formType,\n        label: \"Form Type\",\n        onChange: e => setFormType(e.target.value),\n        children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n          value: \"userInfo\",\n          children: \"User Information\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n          value: \"address\",\n          children: \"Address Information\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n          value: \"payment\",\n          children: \"Payment Information\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Paper, {\n      elevation: 3,\n      sx: {\n        p: 3,\n        mb: 3\n      },\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          spacing: 2,\n          children: fields.map(field => {\n            var _field$options;\n            return /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 12,\n              children: field.type === 'dropdown' ? /*#__PURE__*/_jsxDEV(FormControl, {\n                fullWidth: true,\n                error: !!errors[field.name],\n                children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n                  children: field.label\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 128,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Select, {\n                  value: formData[field.name] || '',\n                  label: field.label,\n                  onChange: e => handleInputChange(field.name, e.target.value),\n                  children: (_field$options = field.options) === null || _field$options === void 0 ? void 0 : _field$options.map(option => /*#__PURE__*/_jsxDEV(MenuItem, {\n                    value: option,\n                    children: option\n                  }, option, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 135,\n                    columnNumber: 25\n                  }, this))\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 129,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 127,\n                columnNumber: 19\n              }, this) : /*#__PURE__*/_jsxDEV(TextField, {\n                fullWidth: true,\n                label: field.label,\n                type: field.type,\n                value: formData[field.name] || '',\n                onChange: e => handleInputChange(field.name, e.target.value),\n                error: !!errors[field.name],\n                helperText: errors[field.name],\n                required: field.required\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 142,\n                columnNumber: 19\n              }, this)\n            }, field.name, false, {\n              fileName: _jsxFileName,\n              lineNumber: 125,\n              columnNumber: 15\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            my: 2\n          },\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"body2\",\n            color: \"text.secondary\",\n            children: [\"Progress: \", Math.round(progress), \"%\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 158,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(LinearProgress, {\n            variant: \"determinate\",\n            value: progress,\n            sx: {\n              mt: 1\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 161,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          variant: \"contained\",\n          color: \"primary\",\n          fullWidth: true,\n          disabled: Object.keys(errors).length > 0,\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 7\n    }, this), submitted && /*#__PURE__*/_jsxDEV(Alert, {\n      severity: \"success\",\n      sx: {\n        mb: 3\n      },\n      children: \"Form submitted successfully!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 9\n    }, this), submittedData.length > 0 && /*#__PURE__*/_jsxDEV(Paper, {\n      elevation: 3,\n      sx: {\n        p: 3\n      },\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h6\",\n        gutterBottom: true,\n        children: \"Submitted Data\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 11\n      }, this), submittedData.map((data, index) => /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          mb: 2,\n          p: 2,\n          bgcolor: 'grey.100'\n        },\n        children: [Object.entries(data).map(([key, value]) => /*#__PURE__*/_jsxDEV(Typography, {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: [key, \":\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 191,\n            columnNumber: 19\n          }, this), \" \", value]\n        }, key, true, {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 17\n        }, this)), /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            mt: 1\n          },\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            size: \"small\",\n            onClick: () => handleEdit(index),\n            sx: {\n              mr: 1\n            },\n            children: \"Edit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 195,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            size: \"small\",\n            color: \"error\",\n            onClick: () => handleDelete(index),\n            children: \"Delete\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 202,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 194,\n          columnNumber: 15\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 13\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 103,\n    columnNumber: 5\n  }, this);\n};\n_s(DynamicForm, \"dj8qlke47qRe06IUXJcvlQ38Hxc=\");\n_c = DynamicForm;\nexport default DynamicForm;\nvar _c;\n$RefreshReg$(_c, \"DynamicForm\");","map":{"version":3,"names":["React","useState","useEffect","Box","FormControl","InputLabel","MenuItem","Select","TextField","Button","Typography","LinearProgress","Alert","Paper","Grid","mockApiResponse","jsxDEV","_jsxDEV","DynamicForm","_s","formType","setFormType","fields","setFields","formData","setFormData","errors","setErrors","progress","setProgress","submitted","setSubmitted","submittedData","setSubmittedData","response","handleInputChange","name","value","prev","validateField","updateProgress","field","find","f","required","newErrors","totalRequired","filter","length","filledRequired","handleSubmit","e","preventDefault","forEach","Object","keys","handleEdit","index","dataToEdit","_","i","handleDelete","children","variant","gutterBottom","fileName","_jsxFileName","lineNumber","columnNumber","fullWidth","sx","mb","label","onChange","target","elevation","p","onSubmit","container","spacing","map","_field$options","item","xs","type","error","options","option","helperText","my","color","Math","round","mt","disabled","severity","data","bgcolor","entries","key","size","onClick","mr","_c","$RefreshReg$"],"sources":["c:/Users/turik/CascadeProjects/New folder/dynamic-form-app/src/components/DynamicForm.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport {\n  Box,\n  FormControl,\n  InputLabel,\n  MenuItem,\n  Select,\n  TextField,\n  Button,\n  Typography,\n  LinearProgress,\n  Alert,\n  Paper,\n  Grid,\n} from '@mui/material';\nimport { FormField, FormData, FormType } from '../types';\nimport { mockApiResponse } from '../api/mockApi';\n\nconst DynamicForm: React.FC = () => {\n  const [formType, setFormType] = useState<FormType>('userInfo');\n  const [fields, setFields] = useState<FormField[]>([]);\n  const [formData, setFormData] = useState<FormData>({});\n  const [errors, setErrors] = useState<Record<string, string>>({});\n  const [progress, setProgress] = useState(0);\n  const [submitted, setSubmitted] = useState(false);\n  const [submittedData, setSubmittedData] = useState<FormData[]>([]);\n\n  useEffect(() => {\n    // Simulate API call\n    const response = mockApiResponse(formType);\n    setFields(response.fields);\n    setFormData({});\n    setErrors({});\n    setProgress(0);\n    setSubmitted(false);\n  }, [formType]);\n\n  const handleInputChange = (name: string, value: string) => {\n    setFormData((prev) => ({ ...prev, [name]: value }));\n    validateField(name, value);\n    updateProgress();\n  };\n\n  const validateField = (name: string, value: string) => {\n    const field = fields.find((f) => f.name === name);\n    if (!field) return;\n\n    if (field.required && !value) {\n      setErrors((prev) => ({ ...prev, [name]: 'This field is required' }));\n    } else {\n      setErrors((prev) => {\n        const newErrors = { ...prev };\n        delete newErrors[name];\n        return newErrors;\n      });\n    }\n  };\n\n  const updateProgress = () => {\n    const totalRequired = fields.filter((field) => field.required).length;\n    if (totalRequired === 0) {\n      setProgress(100);\n      return;\n    }\n\n    const filledRequired = fields.filter(\n      (field) => field.required && formData[field.name]\n    ).length;\n    setProgress((filledRequired / totalRequired) * 100);\n  };\n\n  const handleSubmit = (e: React.FormEvent) => {\n    e.preventDefault();\n    \n    // Validate all fields\n    const newErrors: Record<string, string> = {};\n    fields.forEach((field) => {\n      if (field.required && !formData[field.name]) {\n        newErrors[field.name] = 'This field is required';\n      }\n    });\n\n    if (Object.keys(newErrors).length > 0) {\n      setErrors(newErrors);\n      return;\n    }\n\n    setSubmittedData((prev) => [...prev, formData]);\n    setSubmitted(true);\n  };\n\n  const handleEdit = (index: number) => {\n    const dataToEdit = submittedData[index];\n    setFormData(dataToEdit);\n    setSubmittedData((prev) => prev.filter((_, i) => i !== index));\n  };\n\n  const handleDelete = (index: number) => {\n    setSubmittedData((prev) => prev.filter((_, i) => i !== index));\n  };\n\n  return (\n    <Box>\n      <Typography variant=\"h4\" gutterBottom>\n        Dynamic Form Generator\n      </Typography>\n\n      <FormControl fullWidth sx={{ mb: 3 }}>\n        <InputLabel>Form Type</InputLabel>\n        <Select\n          value={formType}\n          label=\"Form Type\"\n          onChange={(e) => setFormType(e.target.value as FormType)}\n        >\n          <MenuItem value=\"userInfo\">User Information</MenuItem>\n          <MenuItem value=\"address\">Address Information</MenuItem>\n          <MenuItem value=\"payment\">Payment Information</MenuItem>\n        </Select>\n      </FormControl>\n\n      <Paper elevation={3} sx={{ p: 3, mb: 3 }}>\n        <form onSubmit={handleSubmit}>\n          <Grid container spacing={2}>\n            {fields.map((field) => (\n              <Grid item xs={12} key={field.name}>\n                {field.type === 'dropdown' ? (\n                  <FormControl fullWidth error={!!errors[field.name]}>\n                    <InputLabel>{field.label}</InputLabel>\n                    <Select\n                      value={formData[field.name] || ''}\n                      label={field.label}\n                      onChange={(e) => handleInputChange(field.name, e.target.value)}\n                    >\n                      {field.options?.map((option) => (\n                        <MenuItem key={option} value={option}>\n                          {option}\n                        </MenuItem>\n                      ))}\n                    </Select>\n                  </FormControl>\n                ) : (\n                  <TextField\n                    fullWidth\n                    label={field.label}\n                    type={field.type}\n                    value={formData[field.name] || ''}\n                    onChange={(e) => handleInputChange(field.name, e.target.value)}\n                    error={!!errors[field.name]}\n                    helperText={errors[field.name]}\n                    required={field.required}\n                  />\n                )}\n              </Grid>\n            ))}\n          </Grid>\n\n          <Box sx={{ my: 2 }}>\n            <Typography variant=\"body2\" color=\"text.secondary\">\n              Progress: {Math.round(progress)}%\n            </Typography>\n            <LinearProgress variant=\"determinate\" value={progress} sx={{ mt: 1 }} />\n          </Box>\n\n          <Button\n            type=\"submit\"\n            variant=\"contained\"\n            color=\"primary\"\n            fullWidth\n            disabled={Object.keys(errors).length > 0}\n          >\n            Submit\n          </Button>\n        </form>\n      </Paper>\n\n      {submitted && (\n        <Alert severity=\"success\" sx={{ mb: 3 }}>\n          Form submitted successfully!\n        </Alert>\n      )}\n\n      {submittedData.length > 0 && (\n        <Paper elevation={3} sx={{ p: 3 }}>\n          <Typography variant=\"h6\" gutterBottom>\n            Submitted Data\n          </Typography>\n          {submittedData.map((data, index) => (\n            <Box key={index} sx={{ mb: 2, p: 2, bgcolor: 'grey.100' }}>\n              {Object.entries(data).map(([key, value]) => (\n                <Typography key={key}>\n                  <strong>{key}:</strong> {value}\n                </Typography>\n              ))}\n              <Box sx={{ mt: 1 }}>\n                <Button\n                  size=\"small\"\n                  onClick={() => handleEdit(index)}\n                  sx={{ mr: 1 }}\n                >\n                  Edit\n                </Button>\n                <Button\n                  size=\"small\"\n                  color=\"error\"\n                  onClick={() => handleDelete(index)}\n                >\n                  Delete\n                </Button>\n              </Box>\n            </Box>\n          ))}\n        </Paper>\n      )}\n    </Box>\n  );\n};\n\nexport default DynamicForm;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}